--PART 2B
--1)
DROP VIEW shippedVsCustDemand;
CREATE VIEW shippedVsCustDemand AS 
SELECT C.CUSTOMER, C.ITEM,DECODE(S.SHIPPER, NULL,'NA',S.SHIPPER)AS SHIPPER, C.QTY AS CUSTOMERDEMAND, DECODE(S.QTY,NULL,0,S.QTY) AS SHIPPED 
FROM CUSTOMERDEMAND C LEFT OUTER JOIN SHIPORDERS S
ON  C.ITEM = S.ITEM AND S.RECIPIENT = C.CUSTOMER
ORDER BY CUSTOMER;

--2)
DROP VIEW totalManufItems;
CREATE VIEW totalManufItems AS 
SELECT ITEM,SUM(QTY) AS MANUFACTUREDQTY 
FROM MANUFORDERS
GROUP BY ITEM
ORDER BY ITEM;

--3)
DROP VIEW matsUsed;
CREATE VIEW matsUsed as 
SELECT M.MANUF,M.ITEM AS PRODITEM,DECODE(B.MATITEM,NULL,'NA',B.MATITEM) AS MATITEM,DECODE(QTYMATPERITEM*M.QTY,NULL,0,QTYMATPERITEM*M.QTY) AS TOTALQTYMATITEMREQD
FROM MANUFORDERS M LEFT OUTER JOIN BILLOFMATERIALS B
ON  M.ITEM = B.PRODITEM 
ORDER BY MANUF;

DROP VIEW matsUsedVsShipped;
CREATE VIEW matsUsedVsShipped AS 
SELECT  M.MANUF,M.PRODITEM,M.MATITEM, M.TOTALQTYMATITEMREQD,DECODE(S.QTY,NULL,0,S.QTY) AS TOTALQTYMATITEMSHIPPED 
FROM matsUsed M LEFT OUTER JOIN SHIPORDERS S
ON M.MATITEM = S.ITEM  AND M.MANUF = S.RECIPIENT
ORDER BY RECIPIENT;

--4)
DROP VIEW producedVsShipped;
CREATE VIEW producedVsShipped AS 
SELECT M.MANUF,DECODE(S.SHIPPER,NULL,'NA',S.SHIPPER) AS SHIPPER,M.ITEM,M.QTY AS PRODUCEDQTY,
DECODE(S.QTY,NULL,0,S.QTY) AS SHIPPEDQTY 
FROM MANUFORDERS  M LEFT JOIN SHIPORDERS S
ON M.ITEM = S.ITEM AND  S.SENDER = M.MANUF
ORDER BY M.MANUF;

--5)
DROP VIEW suppliedVsShipped;
CREATE VIEW suppliedVsShipped AS 
SELECT SU.SUPPLIER, SU.ITEM,SU.QTY AS SUPPLIEDQTY, SUM(DECODE(SH.QTY,NULL,0,SH.QTY)) AS SHIPPEDQTY 
FROM SUPPLYORDERS SU LEFT OUTER JOIN SHIPORDERS SH
ON SU.ITEM = SH.ITEM AND  SH.SENDER = SU.SUPPLIER
GROUP BY  SU.SUPPLIER, SU.ITEM,SU.QTY 
ORDER BY SU.SUPPLIER;

--6)
DROP VIEW perSupplierCost_nodiscount;
CREATE VIEW perSupplierCost_nodiscount AS 
SELECT DISTINCT S.ITEM, s.SUPPLIER, P.PPU*S.QTY as SUPPLYPRICE 
FROM SUPPLYORDERS S, SUPPLYUNITPRICING P
WHERE S.SUPPLIER = P.SUPPLIER AND S.ITEM = P.ITEM;

DROP VIEW perItemSupplierCost;
CREATE VIEW perItemSupplierCost AS
SELECT P.ITEM,P.SUPPLIER, DECODE(SIGN(D.AMT2 - P. SUPPLYPRICE),-1,P. SUPPLYPRICE *(1-D.DISC2), (DECODE(SIGN(D.AMT1-P. SUPPLYPRICE),-1,P. SUPPLYPRICE *(1-D.DISC1),P. SUPPLYPRICE))) AS FINALSUPPLYPRICE
FROM perSupplierCost_nodiscount P, supplierdiscounts D
WHERE P.SUPPLIER = D.SUPPLIER;

DROP VIEW perSupplierCost;
CREATE VIEW perSupplierCost AS
SELECT C.SUPPLIER, SUM(FINALSUPPLYPRICE) AS SUPPLYPRICE
FROM perItemSupplierCost C
GROUP BY C.SUPPLIER;

--7)
DROP VIEW MANUFCOSTWITHNULL;
CREATE VIEW MANUFCOSTWITHNULL AS 
SELECT DISTINCT M.MANUF,M.ITEM,P.SETUPCOST+(P.PRODCOSTPERUNIT*M.QTY) AS TOTAL_COST 
FROM MANUFORDERS M LEFT JOIN MANUFUNITPRICING P
ON M.ITEM = P.PRODITEM AND P.MANUF = M.MANUF
ORDER BY M.MANUF;

DROP VIEW MANUFCOSTNONULL;
CREATE VIEW MANUFCOSTNONULL AS
SELECT M.MANUF,M.ITEM, DECODE(M.TOTAL_COST,NULL,0,M.TOTAL_COST) AS TOTAL_COST
FROM MANUFCOSTWITHNULL M;

DROP VIEW MANUFCOSTWITHDISC;
CREATE VIEW MANUFCOSTWITHDISC AS 
SELECT M.MANUF, M.ITEM, DECODE(SIGN(D.AMT1-M.TOTAL_COST),-1,(1-D.DISC1)*M.TOTAL_COST, M.TOTAL_COST) AS DISC_MANUF_COST
FROM MANUFCOSTNONULL M, MANUFDISCOUNTS D
WHERE M.MANUF = D.MANUF
ORDER BY MANUF;

DROP VIEW perManufCost;
CREATE VIEW perManufCost AS
SELECT M.MANUF, SUM(M.DISC_MANUF_COST) AS MANUF_COST
FROM MANUFCOSTWITHDISC M
GROUP BY M.MANUF;

--8)
DROP VIEW SHIP_ITEMS_WEIGHT_LOC;
CREATE VIEW SHIP_ITEMS_WEIGHT_LOC AS
SELECT S.ITEM, S.SHIPPER, B.SHIPLOC AS SENDER_LOC, B1.SHIPLOC AS REC_LOC, S.QTY,I.UNITWEIGHT, S.QTY * I.UNITWEIGHT AS SHIP_WEIGHT
FROM SHIPORDERS S, BUSENTITIES B, BUSENTITIES B1, ITEMS I
WHERE S.SENDER = B.ENTITY AND S.RECIPIENT= B1.ENTITY AND S.ITEM = I.ITEM;

DROP VIEW SHIP_PRICE_NODISC;
CREATE VIEW SHIP_PRICE_NODISC AS
SELECT S.ITEM, S.SHIPPER,S.SENDER_LOC,S.REC_LOC, S.SHIP_WEIGHT*P.PRICEPERLB AS SHIP_COST
FROM SHIP_ITEMS_WEIGHT_LOC S, SHIPPINGPRICING P
WHERE S.SHIPPER = P.SHIPPER AND S.SENDER_LOC=P.FROMLOC AND S.REC_LOC=P.TOLOC;

DROP VIEW SHIP_PRICE_DISC;
CREATE VIEW SHIP_PRICE_DISC AS
SELECT S.ITEM, S.SHIPPER,S.SENDER_LOC,S.REC_LOC, DECODE(SIGN(P.AMT2-S.SHIP_COST),-1,(1-P.DISC2)*S.SHIP_COST, (DECODE(SIGN(P.AMT1-S.SHIP_COST),-1,(1-P.DISC1)*S.SHIP_COST,S.SHIP_COST))) AS DISC_SHIPPIRCE
FROM SHIP_PRICE_NODISC S, SHIPPINGPRICING P
WHERE S.SHIPPER = P.SHIPPER AND S.SENDER_LOC=P.FROMLOC AND S.REC_LOC=P.TOLOC;

DROP VIEW FINAL_SHIPPING_COST;
CREATE VIEW FINAL_SHIPPING_COST AS
SELECT S.ITEM, S.SHIPPER,S.SENDER_LOC,S.REC_LOC, DECODE(SIGN(P.MINPACKAGEPRICE - S.DISC_SHIPPIRCE),-1, S.DISC_SHIPPIRCE, P.MINPACKAGEPRICE) AS FINAL_SHIPPING_PRICE
FROM SHIP_PRICE_DISC S, SHIPPINGPRICING P
WHERE S.SHIPPER = P.SHIPPER AND S.SENDER_LOC=P.FROMLOC AND S.REC_LOC=P.TOLOC;

DROP VIEW perShipperCost;
CREATE VIEW perShipperCost AS
SELECT S.SHIPPER, SUM(S.FINAL_SHIPPING_PRICE) AS TOTALSHIPPERCHARGES
FROM FINAL_SHIPPING_COST S
GROUP BY S.SHIPPER;

--9)
DROP VIEW totalSupplyCost;
CREATE VIEW totalSupplyCost AS
SELECT SUM(C.SUPPLYPRICE) AS TOTALSUPPLYCOST
FROM perSupplierCost C;

DROP VIEW totalManufacturingCost;
CREATE VIEW totalManufacturingCost AS
SELECT SUM(C.MANUF_COST) AS TOTALMANUFACTURINGCOST
FROM perManufCost C;

DROP VIEW totalShippingCost;
CREATE VIEW totalShippingCost AS
SELECT SUM(C.TOTALSHIPPERCHARGES) AS TOTALSHIPPINGCOST
FROM perShipperCost C;

DROP VIEW totalCostBreakdown;
CREATE VIEW totalCostBreakdown as
SELECT SU.TOTALSUPPLYCOST, MA.TOTALMANUFACTURINGCOST,SH.TOTALSHIPPINGCOST,(SU.TOTALSUPPLYCOST+MA.TOTALMANUFACTURINGCOST+SH.TOTALSHIPPINGCOST) AS OVERALLCOST
FROM totalSupplyCost SU, totalManufacturingCost MA, totalShippingCost SH;